{% extends "UmbriaOpenApiBundle::base.html.twig" %}

{% block body %}

    <nav class="navbar navbar-default navbar-fixed-top navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar"
                        aria-expanded="false" aria-controls="navbar"
                >
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="{{ path('umbria_open_api_homepage') }}">Umbria - Open API</a>
            </div>
            <div id="navbar" class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="{{ path('umbria_open_api_homepage') }}">Home</a></li>
                    <li><a href="{{ path('umbria_pro_loco_homepage') }}">Turismo</a></li>
                    <li><a href="{{ path('nelmio_api_doc_index') }}">API docs</a></li>
                    <li><a href="{{ path('umbria_open_api_sparql_manual') }}">SPARQL Manual</a></li>
                </ul>
            </div>
        </div>
    </nav>



    <div class="container">
        <div class="row">
            <div class="page-header"><h1>Guida SPARQL Endpoint</h1></div>
            <div class="col-md-4 well">
                Il formato proposto dal W3C per gli "open and linked data" è RDF.<br>
                    Ogni dato del mondo reale viene detto risorsa e viene memorizzato ed esposto sotto forma di tripla:
                    soggetto-predicato-oggetto<br>
                    Il soggetto identifica la risorsa in modo univoco ed è generalmente un URI.<br>
                    Il predicato è un URI che identifica una proprietà definita in un vocabolario (o ontologia).<br>
                    L'oggetto può essere un valore "literal" (stringa, intero...) oppure nuovamente un URI che
                    identifica
                    un'altra risorsa.
            </div>

            <div class="col-md-4 well">
                In questo modo risorse presenti su dataset di origini diverse possono essere collegati tra di
                    loro.<br>
                    Questi collegamenti costituiscono quindi un grande grafo mondiale che contiene tutti i dati
                    pubblicati
                    secondo gli standard dei linked open data.<br>
                    Le varie risorse costituiscono i nodi del grafo e le proprietà gli archi.<br>
                    Una tripla rappresenta: un nodo del grafo (soggetto) collegato tramite un arco orientato (predicato)
                    ad
                    un'altra risorsa (oggetto).<br>
                    Ogni organizzazione che pubblica dei dati secondo questo approccio, può definire sotto-grafi di
                    appartenenza dei dati e offrire un endpoint grazie al quale effettuare query.
            </div>

            <div class="col-md-4 well">Il linguaggio utilizzato per effettuare le query è SPARQL.<br>
                    I risultati delle query sono degli insiemi di triple, solitamente disponibili in vari formati (RDF,
                JSON, HTML...). <br>
                Vediamo di seguito uno dei possibili approcci per consultare un dataset RDF attraverso uno SPARQL
                Endpoint
            </div>


        </div>

        <!--
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
                                                    GRAFI
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
        -->
        <div class="page-header"><h2>Come interrogare uno SPARQL Enpoint</h2></div>
        <div class="row">
            <div class="col-md-8">
                    <pre><code id="graphsFormCode"
                               title="SPARQL query, restituisce l'insieme di tutti i grafi del portale OpenData della regione Umbria"
                               class="img-responsive img-rounded"
                        >


                            SELECT DISTINCT ?graph
                            WHERE{
                            GRAPH ?g {?s a ?t}
                            }


                        </code>
<button type="button" id="graphsFormSubmit" class="btn btn-primary">Esegui query</button></pre>

            </div>
            <div class="col-md-4">
                <h3>1 - Ricerca Grafi</h3>
                <p>Come prima cosa chiediamo quali sono tutti i grafi disponibili. </p>
                <p>La query restituisce l'insieme dei grafi in formato JSON.</p>
                <p>La tabella che vedi dopo aver eseguito la query è ottenuta facendo un parsing del risultato JSON.</p>
                <p>Seleziona un grafo dalla tabella per utilizzarlo nei prossimi step di ricerca.</p>

            </div>


            <div class="col-md-12" id="show_result_graphs" style="display: none">
                <span class="label label-primary">Seleziona un grafo da utilizzare nei prossimi step:</span>
                <div id="graphs_list" class="list-group col-md-12">
                </div>
            </div>
            <div class="text-center col-md-12" id="graphs_pagination">
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="graphs_pages">
                    </ul>
                </nav>
            </div>
            <div class="col-md-12">
                <button id="show_json_graphs" style="display: none" class="label label-primary" data-toggle="collapse"
                        data-target="#graphsFormResult">Risultato JSON:
                </button>
                <div id="graphsFormResult"
                     title="Risultato SPARQL query, contiene l'insieme di tutti i grafi del portale OpenData della regione Umbria in formato JSON"
                     class="collapse well json_result"
                >
                </div>
            </div>

        </div>
        <hr>
        <!--
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
                                                    TIPI
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
        -->
        <div class="row" id="types">
            <div class="col-md-4">
                <h3>2 - Ricerca Tipi</h3>
                <p>Prima di ricercare le risorse vere è proprie è utile sapere che tipi di risorse
                    sono presenti nel grafo che abbiamo scelto (o in tutti i grafi della
                    Regione Umbria se non abbiamo selezionato nessun grafo dalla tabella precedente).</p>
                <p>Selezionando un tipo di dato, tra i risultati di questa query, fai in modo che
                    la prossima query restituisca solo le risorse del tipo scelto.</p>
            </div>
            <div class="col-md-8">
                <div class="col-md-1">
                    <span class="label label-primary">Grafo</span>
                </div>
                <div class="col-md-11">
                    <input type="text" id="sparqlQueryTypeGraph"
                           title="Grafo in cui viene eseguita la query"
                           class="form-control"
                           disabled
                    />
                </div>
                <div class="col-md-12">
                    <pre><code id="sparqlTypeQuery"
                               title="SPARQL query, restituisce l'insieme di tutti i tipi di dato presenti nel grafo"
                               class="img-responsive img-rounded"
                        >


                            SELECT DISTINCT ?o
                            WHERE{
                            ?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; ?o
                            }


                        </code>
<button type="button" id="sparqlQueryTypeSubmit" class="btn btn-default">Esegui query</button></pre>
                </div>
            </div>


            <div class="col-md-12" id="show_result_types" style="display: none">
                <span class="label label-primary">Seleziona un tipo di dato da utilizzare nella ricerca delle risorse:</span>
                <div id="types_list" class="list-group col-md-12">
                </div>
            </div>
            <div class="text-center col-md-12" id="types_pagination">
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="types_pages">
                    </ul>
                </nav>
            </div>
            <div class="col-md-12">
                <button id="show_json_types" style="display: none" class="label label-primary" data-toggle="collapse"
                        data-target="#sparqlQueryTypeResult">Risultato JSON:
                </button>
                <div id="sparqlQueryTypeResult"
                     title="Risultato SPARQL query, contiene l'insieme di tutti i tipi di dato presenti nel grafo in formato JSON"
                     class="well json_result collapse"
                >
                </div>
            </div>

        </div>
        <hr>

        <!--
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
                                                    RISORSE
        -----------------------------------------------------------------------------------------------------------------
        -----------------------------------------------------------------------------------------------------------------
        -->

        <div class="row" id="resources">
            <div class="col-md-8">
                <div class="col-md-1">
                    <span class="label label-primary">Grafo</span>
                </div>
                <div class="col-md-11">
                    <input type="text" id="sparqlQueryGraph"
                           title="Grafo in cui viene eseguita la query"
                           class="form-control"
                           disabled
                    />
                </div>
                <div class="col-md-12">


                        <pre><code id="sparqlQuery"
                                   title="SPARQL query, restituisce l'insieme di tutte le triple del tipo e appartenenti al grafo selezionati"
                                   class="img-responsive img-rounded"
                            >


                                SELECT DISTINCT ?s ?p ?o
                                WHERE{
                                ?s ?p ?o .
                                ?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;&gt;
                                }
                                LIMIT 200


                            </code>

<button type="button" id="sparqlQuerySubmit" class="btn btn-default" disabled>Esegui query</button></pre>
                    <input id="sparqlQueryTypeHidden" type="hidden" value="">
                </div>
            </div>
            <div class="col-md-4">
                <h3>3 - Ricerca Risorse</h3>
                <p>Possiamo finalmente effettuare una query delle risorse del tipo e nel grafo selezionati in
                    precedenza.
                </p>
                <p>Questa volta richiediamo tutte le triple che hanno come soggetto una risorsa del tipo scelto, il
                    risultato sarà quindi un insieme di triple.</p>
                <p>Soggetti, predicati e oggetti possono assumere valori <i>literal</i>, <i>blank node</i> o <i>URI</i>.
                    Le risorse identificate da URI possiedono una rappresentazione HTML che puoi visualizzare con un
                    semplice click.</p>
            </div>


            <div class="col-md-12" id="show_result_resources" style="display: none">
                <span class="label label-primary">Seleziona un URI per visualizzarne la rappresentazione HTML:</span>

                <div id="resources_list" class="btn-group btn-group-justified" role="group">
                    <div class="btn-group" role="group" id="resources_list_s">
                    </div>
                    <div class="btn-group" role="group" id="resources_list_p">
                    </div>
                    <div class="btn-group" role="group" id="resources_list_o">
                    </div>
                </div>
            </div>
            <div class="text-center col-md-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="resources_pages">
                    </ul>
                </nav>
            </div>

            <div class="col-md-12">
                <button id="show_json_resources" style="display: none" class="label label-primary"
                        data-toggle="collapse" data-target="#sparqlQueryResult">Risultato JSON:
                </button>
                <div id="sparqlQueryResult"
                     title="Risultato SPARQL query, contiene l'insieme di tutte le triple del tipo e appartenenti al grafo selezionati in formato JSON"
                     class="well json_result collapse"
                >
                </div>
            </div>


        </div>
        <hr>

        <div class="row">
            <div class="page-header"><h2>Query Avanzate</h2></div>
            <div class="col-md-12">
                <p>Vediamo ora delle query più elaborate in modo tale da comprendere la sintassi SPARQL.</p>
                <p>Come forse avrai intuito, le variabili sono precedute dal segno ?.</p>
                <p>Nella clausola SELECT definiamo le variabili che devono essere mostrate in output,
                    esse quindi devono essere necessariamente definite nella clausola WHERE.</p>
                <p>Nella clausola WHERE filtriamo le triple del nostro grafo. Di base la sintassi <i>?s ?p ?o</i>
                    restituisce tutte le triple del grafo. <br>
                    Il simbolo "." permette di concatenare le condizioni,
                    quindi la sintassi <i>?s ?p ?o. ?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; ?o</i>
                    restituisce tutte le triple del grafo
                    che hanno come soggetto una risorsa che possiede il predicato <i>http://www.w3.org/1999/02/22-rdf-syntax-ns#type</i>
                </p>
            </div>
        </div>

    </div>





    <!-- FOOTER -->
    <footer style="margin-top:150px; border-top: 20px solid #eee ">
        <p class="pull-right"><a href="#">Back to top</a></p>
        <div class="col-md-1"></div>
        <div class="col-md-4">


            <address style="margin: 30px">
                <strong><a href="http://www.regione.umbria.it" target="_blank">Regione Umbria</a></strong><br>
                Corso Vannucci, 96<br>
                06121 Perugia<br>
                <a href="mailto:opendata@regione.umbria.it">opendata@regione.umbria.it</a><br>
                <a href="mailto:regione.giunta@postacert.umbria.it">regione.giunta@postacert.umbria.it</a><br>
                P.IVA 01212820540<br>
            </address>


        </div>
    </footer>






{% endblock %}

 {% block javascripts %}
     {{ parent() }}
     <script src="{{ asset('js/sparql_manual.js') }}"></script>
 {% endblock %}